/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import TestNode.Edge;
import TestNode.Graph;
import TestNode.Node;
import java.awt.Graphics;
import java.awt.Point;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author tosinamuda
 */
public class DrawNode extends javax.swing.JPanel {

    /**
     * Creates new form DrawNode
     */
    public DrawNode() {
        initComponents();
        nodes = new ArrayList<Node>();
        edges = new ArrayList<Edge>();
        graph = new Graph();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNodeB = new javax.swing.JLabel();
        jLabelNodeA = new javax.swing.JLabel();
        jTextFieldNodeB = new javax.swing.JTextField();
        jTextFieldNodeA = new javax.swing.JTextField();
        jComboBoxSelectNodeEdgeAction = new javax.swing.JComboBox();
        jButtonNodeEdgeAction = new javax.swing.JButton();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jLabelNodeB.setText("Node 2");

        jLabelNodeA.setText("Node 1");

        jComboBoxSelectNodeEdgeAction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add Edge", "Delete Edge", "Delete Node", " " }));
        jComboBoxSelectNodeEdgeAction.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSelectNodeEdgeActionItemStateChanged(evt);
            }
        });
        jComboBoxSelectNodeEdgeAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectNodeEdgeActionActionPerformed(evt);
            }
        });

        jButtonNodeEdgeAction.setText("Enter");
        jButtonNodeEdgeAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNodeEdgeActionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jComboBoxSelectNodeEdgeAction, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNodeEdgeAction)
                    .addComponent(jLabelNodeB)
                    .addComponent(jTextFieldNodeB, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(341, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNodeB)
                    .addComponent(jLabelNodeA))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNodeB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNodeA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSelectNodeEdgeAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButtonNodeEdgeAction)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formMousePressed

    private void jComboBoxSelectNodeEdgeActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectNodeEdgeActionActionPerformed
        // TODO add your handling code here:
        javax.swing.JComboBox cb = (javax.swing.JComboBox)evt.getSource();
        int index = cb.getSelectedIndex();
       if(index == 2)
       {
           jLabelNodeB.setVisible(false);
           jTextFieldNodeB.setVisible(false);
       }
       else
       {
           jLabelNodeB.setVisible(true);
           jTextFieldNodeB.setVisible(true);
       }
           
     
    }//GEN-LAST:event_jComboBoxSelectNodeEdgeActionActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        countNode++;
        Node newNode = new Node(String.valueOf(countNode), 20, evt.getPoint());
        
        nodes.add( newNode);
        graph.AddNode(newNode);
        repaint();
    }//GEN-LAST:event_formMouseClicked

    private void jButtonNodeEdgeActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNodeEdgeActionActionPerformed
        // TODO add your handling code here:
        int selectedIndex = jComboBoxSelectNodeEdgeAction.getSelectedIndex();
        String node1Value  =  jTextFieldNodeA.getText();
        
        Node node1  = findNode(node1Value);
       
        if(selectedIndex  == 0 || selectedIndex == 1){
            String node2Value = jTextFieldNodeB.getText();
             Node node2  = findNode(node2Value);
            if (node1 == null || node2 == null)
            {
                JOptionPane.showMessageDialog(this, "One of the Nodes does not exist...Please Enter The Right Node");

            }

            else if(selectedIndex == 0)  {

            edges.add(new Edge(node1, node2));
            graph.AddEdge(node1, node2);
            repaint();
            }
              else if(selectedIndex == 1)  {
             //TO-DO     do edge and node delete function
            edges.add(new Edge(node1, node2));
            graph.AddEdge(node1, node2);
            repaint();
            }
        }
        
        else if (selectedIndex  == 2){
            if (node1 == null )
            {
                JOptionPane.showMessageDialog(this, "The Node entered  does not exist...Please Enter The Right Node");

            }

            else {
                //TO-DO delete node and edge
//            edges.add(new Edge(node1, node2));
//            graph.AddEdge(node1, node2);
//            repaint();
            }
              
        }
    }//GEN-LAST:event_jButtonNodeEdgeActionActionPerformed

    private Node findNode(String nodeValue)
    {
        Node foundNode = null;
        for(Node n: this.nodes) 
        {
            if (n.Label().equals(nodeValue) )
            {
                foundNode = n;
            }
        }
        return foundNode;
        
    }
    
    private void jComboBoxSelectNodeEdgeActionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSelectNodeEdgeActionItemStateChanged
        // TODO add your handling code here:
       
       
    }//GEN-LAST:event_jComboBoxSelectNodeEdgeActionItemStateChanged

    protected void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        if (!nodes.isEmpty()){
        for(Node n : nodes)
        {
            n.drawCircle(g);
            
        }
        }
        
        if (!edges.isEmpty()){
        for (Edge e : edges)
        {
            e.drawEdge(g);
        }                    
        }
    }
    
    public static void main(String [] args)
    {
        DrawNode drawNode = new DrawNode();
        
        JFrame frame = new JFrame();
        frame.add(drawNode);
        frame.setSize(200, 400);
        frame.setVisible(true);
        frame.pack();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonNodeEdgeAction;
    private javax.swing.JComboBox jComboBoxSelectNodeEdgeAction;
    private javax.swing.JLabel jLabelNodeA;
    private javax.swing.JLabel jLabelNodeB;
    private javax.swing.JTextField jTextFieldNodeA;
    private javax.swing.JTextField jTextFieldNodeB;
    // End of variables declaration//GEN-END:variables
    
    private Node node;
    private Node nodeA;
    private Node nodeB;
    private List <Node> nodes;
    private List <Edge> edges;
    private static int countNode = 0;
    private static int countEdge = 0;
    private Graph graph;
}
